<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="cDep.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="cPost.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="cFIO.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="cDateCome.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="cDateEnd.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="cCountDay.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="cDateStartCalculate.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="cmsMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 17</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>225, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IH+AAD//wAD//+AA////AP///wB////Af/8=
</value>
  </data>
</root>